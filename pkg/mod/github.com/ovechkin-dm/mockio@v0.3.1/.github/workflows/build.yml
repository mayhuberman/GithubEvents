# Workflow file of GitHub Actions

name: build

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout scm
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Lint
        uses: golangci/golangci-lint-action@v3

  CodeQL:
    needs: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout scm
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  Test:
    needs: Lint
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os: [ darwin, linux, windows ]
        arch: [ amd64 ]
        go: [ '1.18', '1.19', '1.20' ]
        include:
          - os: darwin
            runs-on: macos-latest
          - os: linux
            runs-on: ubuntu-22.04
          - os: windows
            runs-on: windows-latest
    steps:
      - name: Checkout scm
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: 'Test on darwin'
        if: ${{ matrix.os == 'darwin' }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: go test -v -race -coverprofile="coverage.txt" -covermode=atomic ./...

      - name: 'Test on linux'
        if: ${{ matrix.os == 'linux' }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: go test -v -race -coverprofile="coverage.txt" -covermode=atomic ./...


      - name: 'Test on windows'
        if: ${{ matrix.os == 'windows' && contains(fromJson('["amd64"]'), matrix.arch) }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: go test -v -race -coverprofile="coverage.txt" -covermode=atomic ./...

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          name: Codecov on ${{ matrix.os }}/${{ matrix.arch }} go${{ matrix.go }}
          fail_ci_if_error: false